x-airflow-common:
  &airflow-common
  image: ${AIRFLOW_IMAGE_NAME:-parkpulse:${AIRFLOW_VERSION:-2.8.3}}
  build:
    context: .
  environment:
    &airflow-common-env
    AIRFLOW__CORE__FERNET_KEY: 46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
    AIRFLOW__CORE__EXECUTOR: CeleryExecutor
    AIRFLOW__CELERY__BROKER_URL: redis://:@redis:6379/0
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    POSTGRES_USER: airflow
    POSTGRES_PASSWORD: airflow
    POSTGRES_DB: airflow
    REDIS_PASSWORD: redispass
    PYTHONPATH: /usr/local/airflow/conf/
  volumes:
    - ./park_pulse/dags:/usr/local/airflow/dags
    - ./scripts/airflow.cfg:/usr/local/airflow/airflow.cfg
    - ./park_pulse/plugins:/usr/local/airflow/plugins
    - ./park_pulse/logs:/usr/local/airflow/logs
    - ./park_pulse/conf:/usr/local/airflow/conf
    - "/var/run/docker.sock:/var/run/docker.sock"
    - $HOME/.aws:/home/airflow/.aws

services:
  redis:
    image: redis:6.0.10
    ports:
      - 6379:6379
    environment:
      REDIS_PASSWORD: redispass
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 50
    restart: always
    networks:
      - park-pulse-net

  postgres:
    image: postgres:14.0
    volumes:
      - park-pulse-postgres-db:/var/lib/postgresql/data/pgdata
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
      - PGDATA=/var/lib/postgresql/data/pgdata
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "airflow" ]
      interval: 5s
      retries: 5
    restart: always
    logging:
      options:
        max-size: 10m
        max-file: "3"
    networks:
      - park-pulse-net

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    depends_on:
      - redis
      - postgres
    ports:
      - 8080:8080
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always
    networks:
      - park-pulse-net

  flower:
    <<: *airflow-common
    command: celery flower
    depends_on:
      - redis
    ports:
      - "5555:5555"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:5555/"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always
    networks:
        - park-pulse-net

  scheduler:
    <<: *airflow-common
    command: scheduler 
    depends_on:
      airflow-webserver:
        condition: service_healthy
    restart: always
    networks:
      - park-pulse-net

  worker:
    <<: *airflow-common
    command: celery worker
    depends_on:
      - scheduler
    restart: always
    networks:
      - park-pulse-net

volumes:
  park-pulse-postgres-db:

networks:
  park-pulse-net:
    attachable: true